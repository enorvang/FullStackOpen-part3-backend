{"version":3,"sources":["components/Person.js","components/PersonForm.js","components/Filter.js","components/Notification.js","services/peopleServices.js","App.js","index.js"],"names":["Person","person","handleClick","name","number","onClick","PersonForm","addNewEntry","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","filter","Notification","message","charAt","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","people","setPeople","setNewName","setNewNumber","setFilter","notificationMessage","setNotificationMessage","useEffect","peopleService","initialPeople","peopleToDisplay","length","p","toLowerCase","includes","notify","text","setTimeout","updateEntry","personToUpdate","find","changedPerson","returnedPerson","map","catch","error","deleteEntry","personToDelete","window","confirm","returned","event","target","preventDefault","some","concat","i","key","ReactDOM","render","document","getElementById"],"mappings":"mOASeA,EAPA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAExB,OACE,4BAAKD,EAAOE,KAAZ,IAAmBF,EAAOG,OAA1B,IAAkC,4BAAQC,QAASH,GAAjB,UAAlC,MCaWI,EAhBI,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,YAAaC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBACvE,OACE,0BAAMC,SAAUL,GACd,sCACQ,2BAAOM,MAAOL,EAASM,SAAUL,KAEzC,wCACU,2BAAOI,MAAOH,EAAWI,SAAUH,KAE7C,6BACE,4BAAQI,KAAK,UAAb,UCJSC,EANF,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACd,OACE,wCAAa,2BAAOF,KAAK,SAASZ,KAAK,SAASW,SAAUG,MCiBjDC,EAnBM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KACuB,MAArBA,EAAQC,OAAO,IAAmC,MAAtBD,EAAQC,OAAO,GAElD,yBAAKC,UAAU,YACZF,GAMH,yBAAKE,UAAU,YACZF,I,gBCdHG,EAAU,eAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALK,SAAAG,GAElB,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC6G5BM,EAzHH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,OAEcF,mBAAS,IAFvB,mBAET1B,EAFS,KAEA6B,EAFA,OAGkBH,mBAAS,IAH3B,mBAGTxB,EAHS,KAGE4B,EAHF,OAIYJ,mBAAS,IAJrB,mBAITjB,EAJS,KAIDsB,EAJC,OAKsCL,mBAAS,MAL/C,mBAKTM,EALS,KAKYC,EALZ,KAOhBC,qBAAU,WACRC,IAEGlB,MAAK,SAAAmB,GACJR,EAAUQ,QAEb,IAEH,IAYMC,EAAqC,IAAlB5B,EAAO6B,OAC5BX,EACAA,EAAOlB,QAAO,SAAA8B,GAAC,OAAIA,EAAE5C,KAAK6C,cAAcC,SAAShC,EAAO+B,kBAQtDE,EAAS,SAAAC,GACbV,EAAuBU,GACvBC,YAAW,WACTX,EAAuB,QACtB,MAkCCY,EAAc,SAACpD,GACnB,IAAMqD,EAAiBnB,EAAOoB,MAAK,SAAAR,GAAC,OAAIA,EAAE5C,OAASF,EAAOE,QACpD2B,EAAKwB,EAAexB,GACpB0B,EAAa,eAAQF,EAAR,CAAwBlD,OAAQH,EAAOG,SAE1DuC,EACUb,EAAI0B,GACX/B,MAAK,SAAAgC,GACJrB,EAAUD,EAAOuB,KAAI,SAAAzD,GAAM,OAAIA,EAAO6B,KAAOA,EAAK7B,EAASwD,MAC3DP,EAAO,WAAD,OAAYM,EAAcrD,UAEjCwD,OAAM,SAAAC,GACLV,EAAO,UAAD,OAAWI,EAAenD,KAA1B,sCAIN0D,EAAc,SAAA/B,GAClB,IAAMgC,EAAiB3B,EAAOoB,MAAK,SAAAR,GAAC,OAAIA,EAAEjB,KAAOA,KAC7CiC,OAAOC,QAAP,uCAA+CF,EAAe3D,KAA9D,SACFwC,EACeb,GACZL,MAAK,SAAAwC,GACJf,EAAO,WAAD,OAAYY,EAAe3D,UAElCwD,OAAM,SAAAC,GACLV,EAAO,UAAD,OAAWY,EAAe3D,KAA1B,qCAEViC,EAAUD,EAAOlB,QAAO,SAAA8B,GAAC,OAAIA,EAAEjB,KAAOA,QAI1C,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcX,QAASqB,IACvB,kBAAC,EAAD,CAAQvB,OA/Fe,SAACiD,GAC1B3B,EAAU2B,EAAMC,OAAOtD,UAgGrB,uCACA,kBAAC,EAAD,CAAYN,YArEI,SAAC2D,GACnBA,EAAME,iBAEN,IAAMnE,EAAS,CACbE,KAAMK,EACNJ,OAAQM,GAENyB,EAAOkC,MAAK,SAAAtB,GAAC,OAAIA,EAAE3C,SAAWM,KAChCwC,EAAO,UAAD,OAAWxC,EAAX,oBAEGyB,EAAOkC,MAAK,SAAAtB,GAAC,OAAIA,EAAE5C,OAASK,KAEjCuD,OAAOC,QAAP,UAAkBxD,EAAlB,6GACF6C,EAAYpD,GAId0C,EACU1C,GACPwB,MAAK,SAAAgC,GACJrB,EAAUD,EAAOmC,OAAOb,IACxBpB,EAAW,IACXC,EAAa,IACbY,EAAO,SAAD,OAAUjD,EAAOE,WA8CWK,QAASA,EAASC,iBA9FnC,SAACyD,GACxB7B,EAAW6B,EAAMC,OAAOtD,QA8FpBH,UAAWA,EAAWC,mBA3FD,SAACuD,GAC1B5B,EAAa4B,EAAMC,OAAOtD,UA2FxB,uCApFwBgC,EAAgBa,KAAI,SAACzD,EAAQsE,GACvD,OACE,kBAAC,EAAD,CAAQC,IAAKD,EAAGtE,OAAQA,EAAQC,YAAa,kBAAM2D,EAAY5D,EAAO6B,YCnC5E2C,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SAGX3C,c","file":"static/js/main.6fb886b3.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, handleClick }) => {\r\n\r\n  return (\r\n    <li>{person.name} {person.number} <button onClick={handleClick}>delete</button> </li>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst PersonForm = ({ addNewEntry, newName, handleNameChange, newNumber, handleNumberChange }) => {\r\n  return (\r\n    <form onSubmit={addNewEntry}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button type='submit'>add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({ filter }) => {\r\n    return (\r\n      <div>Filter: <input type=\"search\" name=\"filter\" onChange={filter} /></div>\r\n    )\r\n  }\r\n\r\n  export default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  } else if (message.charAt(0) ==='E' || message.charAt(0) === 'D') {\r\n    return (\r\n      <div className='negative'>\r\n        {message}\r\n      </div>\r\n    )\r\n  } else {\r\n\r\n    return (\r\n      <div className='positive'>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deleteEntry = id => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deleteEntry }","import React, { useState, useEffect } from 'react'\r\nimport Person from './components/Person'\r\nimport PersonForm from './components/PersonForm'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport peopleService from './services/peopleServices'\r\n\r\n\r\nconst App = () => {\r\n  const [people, setPeople] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    peopleService\r\n      .getAll()\r\n      .then(initialPeople => {\r\n        setPeople(initialPeople)\r\n      })\r\n  }, [])\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const peopleToDisplay = (filter.length === 0)\r\n    ? people\r\n    : people.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n  const displayPeople = () => peopleToDisplay.map((person, i) => {\r\n    return (\r\n      <Person key={i} person={person} handleClick={() => deleteEntry(person.id)} />\r\n    )\r\n  })\r\n\r\n  const notify = text => {\r\n    setNotificationMessage(text)\r\n    setTimeout(() => {\r\n      setNotificationMessage(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const addNewEntry = (event) => {\r\n    event.preventDefault()\r\n\r\n    const person = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n    if (people.some(p => p.number === newNumber)) {\r\n      notify(`Error, ${newNumber} already exists`)\r\n\r\n    } else if (people.some(p => p.name === newName)) {\r\n\r\n      if (window.confirm(`${newName} is already added to the phonebook. Do you want to replace replace the old phone number with a new one?`)) {\r\n        updateEntry(person)\r\n      }\r\n\r\n    } else {\r\n      peopleService\r\n        .create(person)\r\n        .then(returnedPerson => {\r\n          setPeople(people.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          notify(`Added ${person.name}`)\r\n        })\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const updateEntry = (person) => {\r\n    const personToUpdate = people.find(p => p.name === person.name)\r\n    const id = personToUpdate.id\r\n    const changedPerson = { ...personToUpdate, number: person.number }\r\n  \r\n    peopleService\r\n      .update(id, changedPerson)\r\n      .then(returnedPerson => {\r\n        setPeople(people.map(person => person.id !== id ? person : returnedPerson))\r\n        notify(`Updated ${changedPerson.name}`)\r\n      })\r\n      .catch(error => {\r\n        notify(`Error, ${personToUpdate.name} does not exist on the server`)\r\n      })\r\n  }\r\n\r\n  const deleteEntry = id => {\r\n    const personToDelete = people.find(p => p.id === id)\r\n    if (window.confirm(`Do you really want to delete ${personToDelete.name} ?`)) {\r\n      peopleService\r\n        .deleteEntry(id)\r\n        .then(returned => {\r\n          notify(`Deleted ${personToDelete.name}`)\r\n        })\r\n        .catch(error => {\r\n          notify(`Error, ${personToDelete.name} does not exist on the server`)\r\n        })\r\n      setPeople(people.filter(p => p.id !== id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} />\r\n      <Filter filter={handleFilterChange} />\r\n\r\n      <h3>Add new</h3>\r\n      <PersonForm addNewEntry={addNewEntry} newName={newName} handleNameChange={handleNameChange}\r\n        newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n      <h2>Numbers</h2>\r\n      {displayPeople()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\nexport default App"],"sourceRoot":""}